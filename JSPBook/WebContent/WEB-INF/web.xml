<web-app>
   <!-- 기본 인증 처리 방법으로 보안 처리하기 -->
   <!-- 
   <security-role>
      <role-name>role1</role-name>
   </security-role>
   <security-constraint>
      <web-resource-collection>
         <web-resource-name>JSPBook</web-resource-name>
         <url-pattern>/ch10/security01.jsp</url-pattern>
         <http-method>GET</http-method>
      </web-resource-collection>
      <auth-constraint>
         <description></description>
         <role-name>role1</role-name>
      </auth-constraint>
   </security-constraint>
   <login-config>
      <auth-method>BASIC</auth-method>
   </login-config>
    -->
    
    <!-- 폼 기반 인증 방법으로 보안 처리하기 -->
    <!-- <security-role>
      <role-name>role1</role-name>
   </security-role>
   <security-constraint>
      <web-resource-collection>
         <web-resource-name>JSPBook</web-resource-name>
         <url-pattern>/ch10/security01.jsp</url-pattern>
         <http-method>GET</http-method>
      </web-resource-collection>
      <auth-constraint>
         <description></description>
         <role-name>role1</role-name>
      </auth-constraint>
   </security-constraint>
   <login-config>
      <auth-method>FORM</auth-method>
      <form-login-config>
      	<form-login-page>/ch10/login.jsp</form-login-page>
      	<form-error-page>/ch10/login_failed.jsp</form-error-page>
      </form-login-config>
   </login-config>
</web-app> -->

<security-role>
      <role-name>role1</role-name>
   </security-role>
   <security-constraint>
      <web-resource-collection>
         <web-resource-name>JSPBook</web-resource-name>
         <url-pattern>/ch10/security02.jsp</url-pattern>
         <http-method>GET</http-method>
      </web-resource-collection>
      <auth-constraint>
         <description></description>
         <role-name>role1</role-name>
      </auth-constraint>
   </security-constraint>
   <login-config>
      <auth-method>FORM</auth-method>
      <form-login-config>
      	<form-login-page>/ch10/login.jsp</form-login-page>
      	<form-error-page>/ch10/login_failed.jsp</form-error-page>
      </form-login-config>
   </login-config>
   
   <!-- 
   		ch11 예외처리
   		오류가 발생했을 때 오류 상태와 오류 페이지를 출력하도록 작성합니다
   		오류가 발생했을 때 오류 코드 500을 설정하도록 error-code 요소를 작성합니다
   		오류가 발생했을 때 오류 페이지 errorCode_error.jsp 를 호출하도록 location요소를 작성합니다.
    -->
    
    
<!--     
<security-role>
<role-name>admin</role-name>
</security-role>
<security-constraint>
<web-resource-collection>
<web-resource-name>JSPBook</web-resource-name>
<url-pattern>/JSPBook/ch11/total_test/login.jsp</url-pattern>
<http-method>GET</http-method>
</web-resource-collection>

<auth-constraint>
<description/>
<role-name>admin</role-name>
</auth-constraint>
</security-constraint>

<login-config>
<auth-method>FORM</auth-method>
<form-login-config>
<form-login-page>/ch11/total_test/login.jsp</form-login-page>
<form-error-page>/ch11/total_test/login_failed.jsp</form-error-page>
</form-login-config>
</login-config> -->
  
   <error-page>
   	<error-code>500</error-code>
   	<location>/ch11/errorCode_error.jsp</location>
   </error-page>
   
   <!-- 
   		오류가 발생했을 때 오류 상태와 오류 페이지를 출력하도록 작성합니다
   		오류가 발생했을 때 예외 유형을 설정하도록 exception-type 요소를 작성합니다.
   		오류가 발생했을 때 오류 페이지 exceptionType_error.jsp를 호출하도록 location요소를 작성합니다.
    -->
   	<error-page>
   		<exception-type>java.lang.Exception</exception-type>
   		<location>/ch11/exceptionType_error.jsp</location>
   	</error-page>
   	
     <filter>
      <filter-name>Filter01</filter-name>
      <filter-class>filter.AuthenFilter</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>Filter01</filter-name>
      <url-pattern>/ch12/filter01_process.jsp</url-pattern>
   </filter-mapping>
   
   <filter>
   	<filter-name>Filter02</filter-name>
   	<filter-class>filter.InitParamFilter</filter-class>
   	<init-param>
   		<param-name>param1</param-name>
   		<param-value>admin</param-value>
   	</init-param>
   	<init-param>
   		<param-name>param2</param-name>
   		<param-value>1234</param-value>
   	</init-param>
   </filter>
   <filter-mapping>
   		<filter-name>Filter02</filter-name>
   		<url-pattern>/ch12/filter02_process.jsp</url-pattern>
   </filter-mapping>
   	
   	<filter>
   		<filter-name>Filter02_2</filter-name>
   		<filter-class>filter.LogFileFilter</filter-class>
   		<init-param>
   			<param-name>filename</param-name>
   			<param-value>c:\\logs\\moniter.log</param-value>
   		</init-param>
   	</filter>
   	<filter-mapping>
   		<filter-name>Filter02_2</filter-name>
   		<url-pattern>/ch12/filter02_process.jsp</url-pattern>
   	</filter-mapping>
   	
   	<servlet>
      <servlet-name>myController</servlet-name>
      <servlet-class>ch18.com.controller.ControllerServlet</servlet-class>
   </servlet>
   <servlet-mapping>
      <servlet-name>myController</servlet-name>
      <url-pattern>/ch18/ControllerServlet</url-pattern>
   </servlet-mapping>
   
<!--    	<servlet>
      <servlet-name>boardController</servlet-name>
      <servlet-class>ch18.com.controller.BoardControllerServlet</servlet-class>
   </servlet>
   <servlet-mapping>
      <servlet-name>boardController</servlet-name>
      <url-pattern>*.do</url-pattern>
   </servlet-mapping> -->
   	<servlet>
      <servlet-name>NoticeController</servlet-name>
      <servlet-class>ch18.com.controller.NoticeBoardController</servlet-class>
   </servlet>
   <servlet-mapping>
      <servlet-name>NoticeController</servlet-name>
      <url-pattern>*.do</url-pattern>
   </servlet-mapping>
</web-app>